# jimoholbab
# https://github.com/jimoholbab/Sieve-of-Eratosthenes-algorithm.git
import math

print ("Enter the upper limit number")
upper_limit = int(input())

primes = []
for i in range(2,upper_limit+1):
    primes.append(i)

least = 2
#from 2 to sqrt(number)
while(least <= int(math.sqrt(upper_limit))):
    #if least is in list, then we got to delete its multiples
    if least in primes:
        #Repeat will give multiples of least, starting from least * least 
        for repeat in range(least*2, upper_limit+1, least):
            if repeat in primes:
                #deleting the multiple if found in list
                primes.remove(repeat)
    least = least+1
 
print ("Following are the prime numbers from 2 to {0}: " .format(upper_limit), primes)

output
Enter the upper limit number
1001
Following are the prime numbers from 2 to 1001:  [2, 3, 5, 7, 11, 13, 17, 19, 
23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 
101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,
179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,
263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 
359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 
457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 
569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,
 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 
769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 
881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]


